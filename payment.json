{"status":true,"message":"Verification successful","data":{"id":144424932,"domain":"test","status":"success","reference":"7TlNJX9lv2wp9f06p8yQEyXih","amount":3395000,"message":null,"gateway_response":"Successful","paid_at":"2019-04-06T07:55:24.000Z","created_at":"2019-04-06T07:55:06.000Z","channel":"card","currency":"NGN","ip_address":"129.56.66.94","metadata":{"shippingFee":"2150","selected_address":"17","cart":{"564dd0ab34b63878ca2237c47a620cf2":{"rowId":"564dd0ab34b63878ca2237c47a620cf2","id":22,"qty":20,"name":"Spiced Chicken","price":800,"options":[],"product":{"id":22,"name":"Spiced Chicken","sku":"100203","slug":"spiced-chicken","description":"Which is absolutely correct and no problem. You don't have to set these properties through a method like $user->posts()->save($post) - this is just a convenience method that does the job for you (see save($model) and related setForeignAttributesForCreate($model) in the framework code; these methods just set the foreign key property for you).","cover":"http:\/\/localhost:8000\/storage\/products\/jUu3L5CJ4HLq97XaUXYKlmyuErJaa3vMEytf98ej.jpeg","quantity":20,"price":"800.00","status":1,"weight":2,"mass_unit":"gms","sale_price":null,"brand_id":1},"cover":"http:\/\/localhost:8000\/storage\/products\/jUu3L5CJ4HLq97XaUXYKlmyuErJaa3vMEytf98ej.jpeg","description":"Which is absolutely correct and no problem. You don't have to set these properties through a method like $user->posts()->save($post) - this is just a convenience method that does the job for you (see save($model) and related setForeignAttributesForCreate($model) in the framework code; these methods just set the foreign key property for you)."},"ba02b0dddb000b25445168300c65386d":{"rowId":"ba02b0dddb000b25445168300c65386d","id":23,"qty":10,"name":"Grilled chicken","price":1500,"options":[],"product":{"id":23,"name":"Grilled chicken","sku":"232376","slug":"grilled-chicken","description":"Which is absolutely correct and no problem. You don't have to set these properties through a method like $user->posts()->save($post) - this is just a convenience method that does the job for you (see save($model) and related setForeignAttributesForCreate($model) in the framework code; these methods just set the foreign key property for you).","cover":"http:\/\/localhost:8000\/storage\/products\/HMi2dlNxHEG1dnQqb7vHQPoJFlD2W7DBRL5qspUb.jpeg","quantity":20,"price":"1500.00","status":1,"weight":5,"mass_unit":"gms","sale_price":null,"brand_id":1},"cover":"http:\/\/localhost:8000\/storage\/products\/HMi2dlNxHEG1dnQqb7vHQPoJFlD2W7DBRL5qspUb.jpeg","description":"Which is absolutely correct and no problem. You don't have to set these properties through a method like $user->posts()->save($post) - this is just a convenience method that does the job for you (see save($model) and related setForeignAttributesForCreate($model) in the framework code; these methods just set the foreign key property for you)."},"8eb747b95b9862e9d83031beb9938720":{"rowId":"8eb747b95b9862e9d83031beb9938720","id":21,"qty":1,"name":"Spiced Snail","price":800,"options":[],"product":{"id":21,"name":"Spiced Snail","sku":"30001","slug":"spiced-snail","description":"Which is absolutely correct and no problem. You don't have to set these properties through a method like $user->posts()->save($post) - this is just a convenience method that does the job for you (see save($model) and related setForeignAttributesForCreate($model) in the framework code; these methods just set the foreign key property for you).","cover":"http:\/\/localhost:8000\/storage\/products\/Jy4FHDI41RJQjQwpzA2TNe31vzaD5RhSAZSY6LGu.jpeg","quantity":25,"price":"800.00","status":1,"weight":0,"mass_unit":"gms","sale_price":null,"brand_id":1},"cover":"http:\/\/localhost:8000\/storage\/products\/Jy4FHDI41RJQjQwpzA2TNe31vzaD5RhSAZSY6LGu.jpeg","description":"Which is absolutely correct and no problem. You don't have to set these properties through a method like $user->posts()->save($post) - this is just a convenience method that does the job for you (see save($model) and related setForeignAttributesForCreate($model) in the framework code; these methods just set the foreign key property for you)."}}},"log":{"start_time":1554537307,"time_spent":16,"attempts":1,"errors":0,"success":true,"mobile":false,"input":[],"history":[{"type":"action","message":"Attempted to pay with card","time":15},{"type":"success","message":"Successfully paid with card","time":16}]},"fees":60925,"fees_split":null,"authorization":{"authorization_code":"AUTH_yf1hjg9t40","bin":"408408","last4":"4081","exp_month":"12","exp_year":"2020","channel":"card","card_type":"visa DEBIT","bank":"Test Bank","country_code":"NG","brand":"visa","reusable":true,"signature":"SIG_slJjVaocdoPQFojOtkMj"},"customer":{"id":6886612,"first_name":"","last_name":"","email":"hallitee_2005@yahoo.com","customer_code":"CUS_k3qbhyszfgjs1cr","phone":"","metadata":null,"risk_action":"default"},"plan":null,"paidAt":"2019-04-06T07:55:24.000Z","createdAt":"2019-04-06T07:55:06.000Z","transaction_date":"2019-04-06T07:55:06.000Z","plan_object":[],"subaccount":[]}}